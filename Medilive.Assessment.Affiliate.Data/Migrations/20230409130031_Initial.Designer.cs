// <auto-generated />
using Medilive.Assessment.Affiliate.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Medilive.Assessment.Affiliate.Data.Migrations
{
    [DbContext(typeof(MediliveAffiliateDatabaseContext))]
    [Migration("20230409130031_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Medilive.Assessment.Affiliate.Data.Model.AuthenticationManagement.Route", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Access")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Controller")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RouteTemplate")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("Access");

                    b.ToTable("Route", "AuthenticationManagement");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Access = "UNAUTHENTICATED_USER",
                            Action = "Index",
                            Controller = "Home",
                            IsDeleted = false,
                            RouteTemplate = "/"
                        },
                        new
                        {
                            Id = 2L,
                            Access = "NONE",
                            Action = "Privacy",
                            Controller = "Home",
                            IsDeleted = false,
                            RouteTemplate = "/privacy"
                        },
                        new
                        {
                            Id = 3L,
                            Access = "NONE",
                            Action = "GetGenderList",
                            Controller = "ReferenceData",
                            IsDeleted = false,
                            RouteTemplate = "/gender-list"
                        },
                        new
                        {
                            Id = 4L,
                            Access = "UNAUTHENTICATED_USER",
                            Action = "Register",
                            Controller = "User",
                            IsDeleted = false,
                            RouteTemplate = "/new-user-registration"
                        },
                        new
                        {
                            Id = 5L,
                            Access = "AUTHENTICATED_USER",
                            Action = "UserHome",
                            Controller = "User",
                            IsDeleted = false,
                            RouteTemplate = "/user-home"
                        },
                        new
                        {
                            Id = 6L,
                            Access = "AUTHENTICATED_USER",
                            Action = "GetUserinfo",
                            Controller = "User",
                            IsDeleted = false,
                            RouteTemplate = "/get-user-info"
                        },
                        new
                        {
                            Id = 7L,
                            Access = "UNAUTHENTICATED_USER",
                            Action = "Login",
                            Controller = "Authentication",
                            IsDeleted = false,
                            RouteTemplate = "/user-login"
                        },
                        new
                        {
                            Id = 8L,
                            Access = "AUTHENTICATED_USER",
                            Action = "Logout",
                            Controller = "Authentication",
                            IsDeleted = false,
                            RouteTemplate = "/user-logout"
                        });
                });

            modelBuilder.Entity("Medilive.Assessment.Affiliate.Data.Model.AuthenticationManagement.RouteAccess", b =>
                {
                    b.Property<string>("V")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("Value");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("V");

                    b.ToTable("RouteAccess", "AuthenticationManagement");

                    b.HasData(
                        new
                        {
                            V = "NONE",
                            Id = 0,
                            Name = "Undefined"
                        },
                        new
                        {
                            V = "AUTHENTICATED_USER",
                            Id = 1,
                            Name = "Authenticated"
                        },
                        new
                        {
                            V = "UNAUTHENTICATED_USER",
                            Id = 2,
                            Name = "Unauthenticated"
                        });
                });

            modelBuilder.Entity("Medilive.Assessment.Affiliate.Data.Model.UserManagement.AffiliateUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id");

                    b.HasIndex("Gender");

                    b.ToTable("AffiliateUser", "UserManagement");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Email = "admin@host.com",
                            Gender = "NONE",
                            IsDeleted = false,
                            Lastname = "Administrator",
                            Name = "System",
                            Password = "BV42COTpekZ3tmYsOsJG9jcgIeO78pQ9ERQeQCvFkfI=",
                            Phone = "5321111111",
                            UserType = "ADMINISTRATOR",
                            Username = "Administrator"
                        });
                });

            modelBuilder.Entity("Medilive.Assessment.Affiliate.Data.Model.UserManagement.Gender", b =>
                {
                    b.Property<string>("V")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("Value");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("V");

                    b.ToTable("Gender", "UserManagement");

                    b.HasData(
                        new
                        {
                            V = "NONE",
                            Id = 0,
                            Name = "Secilmemis"
                        },
                        new
                        {
                            V = "FEMALE",
                            Id = 1,
                            Name = "Kadin"
                        },
                        new
                        {
                            V = "MALE",
                            Id = 2,
                            Name = "Erkek"
                        });
                });

            modelBuilder.Entity("Medilive.Assessment.Affiliate.Data.Model.UserManagement.RegistrationReferralCodeAudit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AttemptOn")
                        .HasColumnType("bigint");

                    b.Property<string>("IdentificationCookie")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<long>("IpNumber")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuccessfull")
                        .HasColumnType("bit");

                    b.Property<string>("ReferralCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("RegistrationReferralCodeAudit", "UserManagement");
                });

            modelBuilder.Entity("Medilive.Assessment.Affiliate.Data.Model.UserManagement.UserType", b =>
                {
                    b.Property<string>("V")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("Value");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("V");

                    b.ToTable("UserType", "UserManagement");

                    b.HasData(
                        new
                        {
                            V = "ADMINISTRATOR",
                            Id = 2,
                            Name = "Administrator"
                        },
                        new
                        {
                            V = "NORMAL_USER",
                            Id = 1,
                            Name = "Normal User"
                        });
                });

            modelBuilder.Entity("Medilive.Assessment.Affiliate.Data.Model.AuthenticationManagement.Route", b =>
                {
                    b.HasOne("Medilive.Assessment.Affiliate.Data.Model.AuthenticationManagement.RouteAccess", null)
                        .WithMany()
                        .HasForeignKey("Access")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Medilive.Assessment.Affiliate.Data.Model.UserManagement.AffiliateUser", b =>
                {
                    b.HasOne("Medilive.Assessment.Affiliate.Data.Model.UserManagement.Gender", null)
                        .WithMany()
                        .HasForeignKey("Gender")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
